//library_management header file
//updated 2nd February 2021

#include <stdlib.h>
#include <ctype.h>
#include "book_management.h"

#define stockSize 99          //Maximum number of different books that can be held in the library
#define userSize 99

struct User{
		char* f_name; //user first name
		char* l_name; //user last name
		char* email; // user email : ensure @ symbol is present when taking input
		char* username; //user login username
        char* password; //user login password
        int isAdmin;
        struct Book* booksOnHand[userSize]; //books with the user is set in this array
        int numBooksOnHand; //number of books with the user
    };

extern struct Book *library[stockSize];
extern struct User *users[userSize];
extern int numBooks;
extern int numUsers;
 

//******************| additional created functions for user_management.c |******************

//saves the array of users in the specified file
//returns 0 if users were stored correctly, or an error code otherwise
int store_users(FILE *file);

//loads the array of users from the specified file
//the file must have been generated by a previous call to store_books()
//returns 0 if users were loaded correctly, or an error code otherwise
int load_users(FILE *file);

//function to manage user Login
int user_login(char* username, char* password);

//function to test validity of new users
int register_user(struct User newUser);

//function to remove users - admin only
//int remove_users(struct User oldUser);

//function to manage book borrowing
int borrow_book(struct User borrower, struct Book* borrowedBook);

//function to manage book returning
int return_book(struct User returner,struct Book* returnBook);